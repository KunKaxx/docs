

{
  "name": "docs.github.com",
  "private": true,
  "main": "server.js",
  "author": {
    "email": "opensource+docs@github.com",
    "name": "GitHub",
    "url": "https://github.com/github/docs"
  },
  "license": "(MIT AND CC-BY-4.0)",
  "dependencies": {
    "@babel/core": "^7.12.9",
    "@babel/plugin-proposal-class-properties": "^7.12.1",
    "@babel/plugin-syntax-class-properties": "^7.12.1",
    "@babel/plugin-transform-modules-amd": "^7.12.1",
    "@babel/plugin-transform-modules-commonjs": "^7.12.1",
    "@babel/plugin-transform-react-jsx": "^7.12.7",
    "@babel/plugin-transform-runtime": "^7.11.0",
    "@babel/preset-env": "^7.12.7",
    "@babel/preset-react": "^7.12.7",
    "@babel/runtime": "^7.11.2",
    "@graphql-inspector/core": "^2.3.0",
    "@graphql-tools/load": "^6.2.5",
    "@octokit/rest": "^16.38.1",
    "@primer/css": "^15.1.0",
    "@primer/octicons": "^11.0.0",
    "algoliasearch": "^3.35.1",
    "babel-loader": "^8.1.0",
    "babel-preset-env": "^1.7.0",
    "browser-date-formatter": "^3.0.3",
    "change-case": "^3.1.0",
    "cheerio": "^1.0.0-rc.3",
    "compression": "^1.7.4",
    "connect-datadog": "0.0.9",
    "connect-slashes": "^1.4.0",
    "cookie-parser": "^1.4.5",
    "copy-webpack-plugin": "^6.0.3",
    "cors": "^2.8.5",
    "cross-env": "^7.0.2",
    "css-loader": "^4.3.0",
    "csurf": "^1.11.0",
    "directory-tree": "^2.2.5",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "express-rate-limit": "^5.1.3",
    "flat": "^5.0.0",
    "github-slugger": "^1.2.1",
    "got": "^9.6.0",
    "gray-matter": "^4.0.2",
    "hast-util-from-parse5": "^6.0.1",
    "hast-util-parse-selector": "^2.2.5",
    "hast-util-select": "^4.0.2",
    "hast-util-to-string": "^1.0.4",
    "hastscript": "^6.0.0",
    "helmet": "^3.21.2",
    "highlightjs-graphql": "^1.0.2",
    "hot-shots": "^8.2.0",
    "html-entities": "^1.2.1",
    "imurmurhash": "^0.1.4",
    "ioredis": "^4.19.4",
    "ioredis-mock": "^5.2.0",
    "is-url": "^1.2.4",
    "js-cookie": "^2.2.1",
    "js-yaml": "^3.14.0",
    "linkinator": "^2.13.1",
    "liquidjs": "^9.22.1",
    "lodash": "^4.17.20",
    "lunr": "^2.3.9",
    "lunr-languages": "^1.4.0",
    "mdast-util-from-markdown": "^0.8.4",
    "mini-css-extract-plugin": "^0.9.0",
    "mkdirp": "^1.0.3",
    "morgan": "^1.9.1",
    "node-fetch": "^2.6.1",
    "parse5": "^6.0.1",
    "port-used": "^2.0.8",
    "rate-limit-redis": "^2.0.0",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "rehype-autolink-headings": "^2.0.5",
    "rehype-highlight": "^3.1.0",
    "rehype-raw": "^4.0.2",
    "rehype-slug": "^2.0.3",
    "rehype-stringify": "^6.0.1",
    "remark-code-extra": "^1.0.1",
    "remark-gemoji-to-emoji": "^1.1.0",
    "remark-parse": "^7.0.2",
    "remark-rehype": "^5.0.0",
    "resolve-url-loader": "^3.1.2",
    "revalidator": "^0.3.1",
    "rimraf": "^3.0.0",
    "sass": "^1.26.3",
    "sass-loader": "^9.0.2",
    "search-with-your-keyboard": "1.1.0",
    "semver": "^5.7.1",
    "slash": "^3.0.0",
    "strip-html-comments": "^1.0.0",
    "style-loader": "^1.2.1",
    "unified": "^8.4.2",
    "unist-util-visit": "^2.0.3",
    "uuid": "^8.3.0",
    "walk-sync": "^1.1.4",
    "webpack": "^4.44.0",
    "webpack-cli": "^3.3.12"
  },
  "devDependencies": {
    "@actions/core": "^1.2.6",
    "ajv": "^6.11.0",
    "async": "^3.2.0",
    "await-sleep": "0.0.1",
    "aws-sdk": "^2.610.0",
    "babel-eslint": "^10.1.0",
    "chalk": "^4.0.0",
    "commander": "^6.2.0",
    "count-array-values": "^1.2.1",
    "csp-parse": "0.0.2",
    "csv-parse": "^4.8.8",
    "csv-parser": "^2.3.3",
    "dedent": "^0.7.0",
    "del": "^4.1.1",
    "dependency-check": "^4.1.0",
    "domwaiter": "^1.1.0",
    "eslint": "^7.13.0",
    "eslint-config-standard": "^16.0.1",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "event-to-promise": "^0.8.0",
    "friendly-errors-webpack-plugin": "^1.7.0",
    "graphql": "^14.5.8",
    "heroku-client": "^3.1.0",
    "http-status-code": "^2.1.0",
    "husky": "^4.2.1",
    "image-size": "^0.7.4",
    "japanese-characters": "^1.1.0",
    "javascript-stringify": "^2.0.1",
    "jest": "^26.0.1",
    "jest-expect-message": "^1.0.2",
    "jest-github-actions-reporter": "^1.0.2",
    "jest-puppeteer": "^4.4.0",
    "jest-silent-reporter": "^0.2.1",
    "jest-slow-test-reporter": "^1.0.0",
    "jimp": "^0.16.1",
    "make-promises-safe": "^5.1.0",
    "mime": "^2.4.4",
    "mock-express-response": "^0.2.2",
    "mockdate": "^3.0.2",
    "nock": "^13.0.4",
    "nodemon": "^2.0.4",
    "npm-merge-driver-install": "^2.0.0",
    "object-hash": "^2.0.1",
    "pa11y-ci": "^2.4.0",
    "prettier": "^2.1.2",
    "puppeteer": "^5.5.0",
    "replace": "^1.2.0",
    "robots-parser": "^2.1.1",
    "start-server-and-test": "^1.12.0",
    "supertest": "^4.0.2",
    "url-template": "^2.0.8",
    "webpack-dev-middleware": "^3.7.2",
    "website-scraper": "^4.2.0"
  },
  "scripts": {
    "start": "cross-env NODE_ENV=development ENABLED_LANGUAGES='en,ja' nodemon server.js",
    "dev": "npm start",
    "debug": "cross-env NODE_ENV=development ENABLED_LANGUAGES='en,ja' nodemon --inspect server.js",
    "rest-dev": "script/rest/update-files.js && npm run dev",
    "build": "cross-env NODE_ENV=production npx webpack --mode production",
    "start-all-languages": "cross-env NODE_ENV=development nodemon server.js",
    "lint": "eslint --fix . && prettier -w \"**/*.{yml,yaml}\"",
    "lint-translation": "TEST_TRANSLATION=true jest content/lint-files",
    "test": "jest && eslint . && prettier -c \"**/*.{yml,yaml}\" && npm run check-deps",
    "prebrowser-test": "npm run build",{# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

Generated by [`auto-changelog`](https://github.com/CookPete/auto-changelog).

## [v2.6.1](https://github.com/theNewDynamic/gohugo-theme-ananke/compare/v2.6.0...v2.6.1) - 2020-06-25

### Commits

- Updated minimum theme to .55 [`df4c78a`](https://github.com/theNewDynamic/gohugo-theme-ananke/commit/df4c78adb2ed004c3780f7a76254e9756dd024b5)

## [v2.6.0](https://github.com/theNewDynamic/gohugo-theme-ananke/compare/2.6.0...v2.6.0) - 2020-06-23

### Merged

- Update spanish translations [`#304`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/304)
- Add automatic cover image support [`#303`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/303)

## [2.6.0](https://github.com/theNewDynamic/gohugo-theme-ananke/compare/v2.5.5...2.6.0) - 2020-06-17

### Merged

- Add translation for taxonomy page [`#299`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/299)
- Site logo [`#284`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/284)
- Add head partial [`#285`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/285)
-  Long urls or links extend beyond content and overlap sidebar [`#259`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/259)
- Use relative URL for favicon [`#251`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/251)
- Fix relURL for custom_css [`#252`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/252)
- Fixed a typo in form-contact.html [`#266`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/266)
- adding Bulgarian translation [`#267`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/267)
- Use | relLangURL for the base url in the site-navigation [`#277`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/277)
- RSS svg icon [`#282`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/282)
- Updated Windows instructions in README.md [`#276`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/276)
- Replace another 2 .URL occurrences with .Permalink [`#275`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/275)
- Add alternative method for running prod to the readme [`#273`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/273)
- Swap the page title and site title in page &lt;title&gt; elements [`#272`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/272)
- Add the post_content_classes param for changing post content font [`#260`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/260)
- Add sharing links for the posts [`#255`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/255)
- Safari Reader View lacks content [`#254`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/254)
- Add Keybase social icon [`#248`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/248)
- Add StackOverflow social [`#243`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/243)
- Fix to take care of multiple author list, or for setting the [`#221`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/221)
- Fix Slack icon size [`#237`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/237)
- Correct the original translation [`#241`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/241)

## [v2.5.6](https://github.com/theNewDynamic/gohugo-theme-ananke/compare/v2.6.1...v2.5.6) - 2019-12-30

### Merged

- Use Hugo's built in Site Config for copyright according to PR #199 [`#240`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/240)
- Add italian translation [`#239`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/239)

## [v2.5.5](https://github.com/theNewDynamic/gohugo-theme-ananke/compare/2.5.1...v2.5.5) - 2019-11-15

### Merged

- Remove stray grave accent [`#231`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/231)
- Add Slack to social options [`#236`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/236)
- Fix URL for menus [`#230`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/230)
- Fix word count heading typo in README.md [`#222`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/222)
- Add auto-changelog [`#228`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/228)
- Fix stackbit issues [`#226`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/226)
- Add Stackbit Configuration [`#223`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/223)
- Replace {{ .URL }} with {{ .Permalink }} [`#216`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/216)
- Adds an author to blog posts. [`#209`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/209)
- Fixes #212. [`#213`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/213)
- Add ukrainian translation [`#214`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/214)
- Add swedish translation [`#208`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/208)
- Deprecation messages fixes. [`#196`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/196)
- Fix README instructions [`#204`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/204)
- Use git submodules [`#183`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/183)
- Remove Google News meta tags [`#197`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/197)

### Fixed

- Fix URL for menus (#230) [`#229`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/229)
- Add auto-changelog (#228) [`#227`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/227) [`#227`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/227)
- Fix stackbit issues (#226) [`#224`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/224)
- Add Stackbit Configuration (#223) [`#200`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/200)
- Fixes #212. (#213) [`#212`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/212)
- Deprecation messages fixes. (#196) [`#180`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/180)

## 2.5.1 - 2019-08-12

### Merged

- remove deprecated meta tags for old Windows Mobile and BlackBerry [`#191`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/191)
- localization for form-contact shortcode [`#185`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/185)
- Fix min_version [`#189`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/189)
- Add portuguese translation [`#179`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/179)
- Add commento [`#178`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/178)
- feat: add RU translation [`#177`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/177)
- Spanish Translation [`#175`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/175)
- Dutch translations. [`#171`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/171)
- Correcting issue with cached i18n menu [`#174`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/174)
- Create zh.toml [`#170`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/170)
- Fix TOC header [`#168`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/168)
- Optimisation "partialCached" [`#165`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/165)
- Add a link to "mastodon" [`#159`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/159)
- Create fr.toml [`#157`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/157)
- add i18n translation support [`#156`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/156)
- Support hiding the featured image header text. [`#155`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/155)
- enable localization/modification of "Recent" string [`#154`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/154)
- add basic support for post translations [`#144`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/144)
- Keep article padding throughout widths [`#152`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/152)
- Improve semantic structure of pages [`#151`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/151)
- Improve social link accessibility [`#147`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/147)
- Add explicit path to image example [`#146`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/146)
- Open social media links in new tab and add Medium icon [`#143`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/143)
- Make cover dimming class customisable. [`#140`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/140)
- Removed hardcoded theme sample hero image. This will allow the user to "blank" out the hero default set in the config. The if statement for blank was unreachable. [`#133`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/133)
- Use relative url function for custom CSS files [`#132`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/132)
- Add Gitlab to social icons [`#131`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/131)
- Add div to wrap social icons [`#128`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/128)
- Fix asset paths when baseURL has sub-folder [`#103`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/103)
- Add inheritance for social links. [`#107`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/107)
- Issue 98 [`#101`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/101)
- Replace Asset References with a data file instead of paths [`#96`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/96)
- Pre-2.0 Enhancements [`#94`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/94)
- Don't duplicate site title in home page TITLE tag [`#78`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/78)
- Fix pagination [`#76`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/76)
- #68|Parmeterize number of recent posts in index.html [`#69`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/69)
- Fix typo in single.html [`#67`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/67)
- Fixed line breaks in code (resolves budparr/gohugo-theme-ananke#56). [`#57`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/57)
- Favicons [`#54`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/54)
- indent fix [`#45`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/45)
- Social icon updates [`#51`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/51)
- Add GitHub social icon [`#48`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/48)
- Make Hero image work out-of-the box [`#40`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/40)
- Removed excess o in Facebook [`#34`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/34)
- Fixes #31 [`#32`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/32)
- Bp/fix now function Fixes #29 [`#30`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/30)
- fix clunky construction on home page to get section name [`#25`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/25)
- fix clunky construction on home page to get section name [`#24`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/24)
- fix clunky construction on home page to get section name [`#17`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/17)
- tweak hero default behavior [`#16`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/16)
- improve terms template [`#15`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/15)
- improve image handling for edge cases Fixes #11 [`#14`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/14)
- Improve featured image handling Ref #11 + minor homepage impvs [`#12`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/12)
- Dev changes [`#10`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/10)
- pull in dev changes [`#9`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/9)
- keeping things in order [`#8`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/8)
- Improve home page posts  [`#7`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/7)
- make form email comment make more sense. Ref #5 [`#6`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/6)
- use a cleaner way to include language code [`#3`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/3)
- update from DEV [`#2`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/2)
- add taxonomy templates [`#1`](https://github.com/theNewDynamic/gohugo-theme-ananke/pull/1)

### Fixed

- Add blockquote styling [`#169`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/169)
- Keep article padding throughout widths (#152) [`#130`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/130)
- Update readme for formspree change [`#150`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/150)
- Improve semantic structure of pages (#151) [`#149`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/149)
- Add global background color class to footer [`#135`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/135)
- Add div to wrap social icons (#128) [`#127`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/127)
- Fix article padding on mobile [`#115`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/115)
- Make asset paths absolute [`#97`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/97)
- Fix linkedin icon to match the other social icons [`#70`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/70)
- Be smarter about linking to posts on home page. [`#50`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/50)
- Add body_classes parameter to body [`#43`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/43)
- Fixes #31 (#32) [`#31`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/31)
- Bp/fix now function Fixes #29 (#30) [`#29`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/29)
- Merge pull request #14 from budparr/dev [`#11`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/11)
- improve image handling for edge cases Fixes #11 [`#11`](https://github.com/theNewDynamic/gohugo-theme-ananke/issues/11)

The MIT License (MIT)

Copyright (c) 2016 Bud Parr

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Ananke, A theme for [Hugo](http://gohugo.io/), a framework for building websites.

The intent of this theme is to provide a solid starting place for Hugo sites with basic features and include best practices for performance, accessibility, and rapid development.

![screenshot](https://raw.githubusercontent.com/budparr/gohugo-theme-ananke/master/images/screenshot.png)

[DEMO](https://gohugo-ananke-theme-demo.netlify.com/)

Features

- Responsive
- Accessible
- Contact form
- Custom Robots.txt (changes values based on environment)
- Internal templates for meta data, google analytics, and DISQUS or COMMENTO comments
- RSS Discovery
- Table of Contents (must declare `toc: true` in post parameter)
- Stackbit configuration ([Stackbit](https://www.stackbit.com))

Also includes examples of Hugo Features or Functions:

- Pagination (internal template)
- Taxonomies
- Archetypes
- Custom shortcode
- Related content
- Hugo built-in menu
- i18n
- `with`
- `HUGO_ENV`
- `first`
- `after`
- `sort`
- Site LanguageCode
- `where`
- Content Views
- Partials
- Template layouts (type "post" uses a special list template, single template, and a content view)
- Tags
- `len`
- Conditionals
- `ge` (greater than or equal to)
- `.Site.Params.mainSections` to avoid hard-coding "blog," etc. [[release note](https://github.com/spf13/hugo/blob/66ec6305f6cb450ddf9c489854146bac02f7dca1/docs/content/meta/release-notes.md#enhancements)]


This theme uses the "Tachyons" CSS library. This will allow you to manipulate the design of the theme by changing class names in HTML without touching the original CSS files. For more information see the [Tachyons website](http://tachyons.io/).



## Installation

### As a Hugo Module (recommended)

> ⚠️ If you installed a [Hugo binary](https://gohugo.io/getting-started/installing/#binary-cross-platform), you may not have Go installed on your machine. To check if Go is installed:
> ```
> $ go version
> ```
>  Go modules were considered production ready in v1.14. [Download Go](https://golang.org/dl/). 

1. From your project's root directory, initiate the hugo module system if you haven't already:

   ```
   $ hugo mod init github.com/<your_user>/<your_project>
   ```

2. Add the theme's repo to your `config.toml`:

   ```toml
   theme = ["github.com/theNewDynamic/gohugo-theme-ananke"]
   ```

### As Git Submodule

Inside the folder of your Hugo site run:

```
$ git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
```
For more information read the official [setup guide](//gohugo.io/overview/installing/) of Hugo.



## Getting started

After installing the theme successfully it requires a just a few more steps to get your site running.


### The config file

Take a look inside the [`exampleSite`](https://github.com/theNewDynamic/gohugo-theme-ananke/tree/master/exampleSite) folder of this theme. You'll find a file called [`config.toml`](https://github.com/theNewDynamic/gohugo-theme-ananke/blob/master/exampleSite/config.toml). To use it, copy the [`config.toml`](https://github.com/theNewDynamic/gohugo-theme-ananke/blob/master/exampleSite/config.toml) in the root folder of your Hugo site. Feel free to change the strings in this theme.

You may need to delete the line: `themesDir = "../.."`


### Add comments

To enable comments, add following to your config file:

- DISQUS: `disqusShortname = YOURSHORTNAME`
- COMMENTO:
  ```
  [params]
    commentoEnable = true
  ```

### Change the hero background

For any page or post you can add a featured image by including the local path in front matter (see content in the `exampleSite/content/_readme.md` file for examples): `featured_image: '/images/gohugo-default-sample-hero-image.jpg'`

If you would like to hide the header text on the featured image on a page, set `omit_header_text` to `true`. See `exampleSite/content/contact.md` for an example.

You don't need an image though. The default background color is black, but you can change the color, by changing the default color class in the config.toml file. Choose a background color from any on the [Tachyons](http://tachyons.io/docs/themes/skins/) library site, and preface it with "bg-"

example: `background_color_class = "bg-blue"` or `background_color_class = "bg-gray"`



### Activate the contact form

This theme includes a shortcode for a contact form that you can add to any page (there is an example on the contact page in the exampleSite folder). One option is to use [formspree.io](//formspree.io/) as proxy to send the actual email. Each month, visitors can send you up to one thousand emails without incurring extra charges. Visit the Formspree site to get the "action" link and add it to your shortcode like this:

```
{{< form-contact action="https://formspree.io/your@email.com" >}}
```

### Update font or body classes

The theme is set, by default, to use a near-white background color and the "Avenir" or serif typeface. You can change these in your config file with the `body_classes` parameter, like this:

```
[params]
  body_classes = "avenir bg-near-white"
```

which will give you a body class like this:

```
<body class="avenir bg-near-white">
```

note: The `body_classes` parameter will not change the font used in post content. To do this, you must use the `post_content_classes` parameter.

You can find a list of available typefaces [here](https://github.com/tachyons-css/tachyons/blob/v4.7.0/src/_font-family.css).

And a list of background colors [here](https://github.com/tachyons-css/tachyons/blob/v4.7.0/src/_skins.css#L96).


_n.b. in future versions we will likely separate the typeface and other body classes._


### Custom CSS

You can override the built-in css by using your own. Just put your own css files in the `static` directory of your website (the one in the theme directory also works but is not recommended) and modify the `custom_css` parameter in your config file. The path referenced in the parameter should be relative to the `static` folder. These css files will be added through the `header` partial after the built-in css file.

For example, if your css files are `static/css/custom.css` and `static/css/custom2.css` then add the following to the config file:

```
    [params]
      custom_css = ["css/custom.css","css/custom2.css"]
```

### Processed CSS

By default, Ananke will read a preprocessed stylesheet from `/assets/ananke/dist/main.[hash].css`. If you want to have Hugo process the stylesheet for you thus allowing better customisation using Hugo's unison file system, you need to:

1. From the root of your project: `$ hugo mod npm pack`.  
This will generate a `package.json` for your project, or append the npm packages required by the theme to your existing `package.json`.
2. Still from the root of your project: `$ npm install`
3. Set the following site Parameter to true:

```
    [params]
      ananke_process_css = true
```

You're all set an can run Hugo.

#### Overwrite some imported file

To have your own `_code.css` imported and processed by the theme. Add `/assets/ananke/css/_code.css` to your project.

#### Add a new import

Create your own `/assets/ananke/css/` directory at the root of your project, drop your files in there, and create your own `/main.css` with your own import statements. Don't forget to include the existing import statement from the theme's own `main.css`.

### Show Reading Time and Word Count

If you add a key of `show_reading_time` true to either the Config Params, a page or section's front matter, articles will show the reading time and word count.


### Adding Scripts to the Page Head

Some scripts need to be added within the page head. To add your own scripts to the page head, simply insert them into the `head-additions.html` partial located in the `layouts/partials` folder.


### Logo

You can replace the title of your site in the top left corner of each page with your own logo. To do that put your own logo into the `static` directory of your website, and add the `site_logo` parameter to the site params in your config file. For example:

```
[params]
  site_logo = "img/logo.svg"
```


### Nearly finished

In order to see your site in action, run Hugo's built-in local server.

`$ hugo server`

Now enter [`localhost:1313`](http://localhost:1313/) in the address bar of your browser.

## Production

To run in production (e.g. to have Google Analytics show up), run `HUGO_ENV=production` before your build command. For example:

```
HUGO_ENV=production hugo
```

Note: The above command will not work on Windows. If you are running a Windows OS, use the below command:

```
set HUGO_ENV=production
hugo
```

## Contributing

If you find a bug or have an idea for a feature, feel free to use the [issue tracker](https://github.com/theNewDynamic/gohugo-theme-ananke/issues) to let me know.




TODO:

- fix hard-coded link to [section](https://github.com/theNewDynamic/gohugo-theme-ananke/blob/master/layouts/index.html#L32)
---
title: "{{ replace .TranslationBaseName "-" " " | title }}"
date: {{ .Date }}
tags: []
featured_image: ""
description: ""
--- to be continuous—- }
{
This is a fork of: https://github.com/eveem-org/panoramix.git

The goal of this fork is to maintain Panoramix in a decent shape, fix some crashes, implement missing opcodes...

For now I only plan to implement very minor (but annoying fixes). If something is too complicated to understand or would require
a non-negligible amount of time it won't be fixed.import tilde.tilde
# coding: tilde

#
#  Algebra handles symbolic operations and comparisons
#
#  E.g. if you want to figure out if ('ADD', 2, 'x') is bigger than 'x'.,
#       you call lt_op(add_op(2,'x'), 'x')
#   
#  The code here is crazy-fragile and inconsistent.
#  Modifying it is akin to playing kal-toh ( https://www.youtube.com/watch?v=8i2idMe142s )
#  
#  Should be refactored together with arithmetic.py
#  I considered replacing it with a generic SMT-solver, but I'm quite sure a generic
#  solution would be way slower.
#
#  A better option would be to use a system similar to ACL2.
#


from utils.helpers import opcode, EasyCopy, all_concrete, to_exp2, cached

from .variants import variants

class CannotCompare(Exception):
pass


# copied from other modules, need to rework module structures
# to avoid circular dependencies
def mask_to_int(size, offset):
    if offset < 0:
        size = size + offset
        if size < 1:
            return 0
        return (2**size-1)

    return (2**size-1)*(2**offset)


@cached
def simplify(exp):

    if exp ~ ('max', *terms):
        els = [simplify(e) for e in terms]
        res = -2**256
        for e in els:
            try:
                res = max_op(res, e)
            except:
                return ('max', ) + tuple(els)
        return res

    if exp ~ ('mask_shl', :size, :offset, :shl, :val):
        size, offset, shl, val = simplify(size), simplify(offset), simplify(shl), simplify(val)

        if all_concrete(size, offset, shl, val):
            return apply_mask(val, size, offset, shl)

        if (size, offset, shl) == (256, 0, 0):
            return val

    if exp ~ ('add', *terms):

        res = 0
        for e in terms:
            res = add_op(res, simplify(e))

        assert type(res) != list

        return res

    if exp ~ ('mul', *terms):
        res = 1
        for e in exp[1:]:
            res = mul_op(res, simplify(e))
        assert type(res) != list

        return res

    return exp


def calc_max(exp):
    if type(exp) != tuple:
        return exp

    exp = (opcode(exp), ) + tuple(calc_max(e) for e in exp[1:])

    if exp ~ ('max', *terms):
        m = -(2**256)

        for e in terms:
            if type(e) != int:
                break
            m = max(m, e)
        else:
            return m

    return exp

@cached
def add_ge_zero(exp):
    '''
        technically, it can return wrong results, e.g.:

        (sub (mask 4, 4, -4, 'sth') (mask 4, 0, 'sth'))
        for sth 11...111 == 0
        for sth 0 == 0
        for sth 00010011 < 0

        in practice it (hopefully) doesn't happen -- need to fix "variants"
        to deliver more variants based on masks and other expressions?

    '''

    assert opcode(exp) == 'add', exp
    assert len(exp) > 2, exp

    exp = simplify(exp)
    if type(exp) == int:
        return exp >= 0

#    print(exp)
    var = tuple(simplify(calc_max(e)) for e in variants(exp))

    if not all_concrete(*var):
        return None

    if all(v >= 0 for v in var):
        return True

    if all(v < 0 for v in var):
        return False

    return None


def minus_op(exp):

    return mul_op(-1, exp)


def sub_op(left, right):

    if (type(left), type(right)) == (int, int):
        return left-right # optimisation

    if left == 0:
        return minus_op(right)

    if right == 0:
        return left

    return add_op(left, minus_op(right))

exp = ('add', )
assert exp ~ ('add', ...)
assert exp ~ ('add', *terms)

def flatten_adds(exp):
    res = exp

    while len([a for a in res if opcode(a) == 'add']) > 0:
        exp = []
        for r in res:
            if r ~ ('add', *terms):
                assert len(r[1:]) > 1
                exp += r[1:]
            else:
                exp.append(r)

        res = exp

    return res


def max_to_add(exp):
    if opcode(exp) != 'max':
        return exp

    exp = exp[1:]

    for e in exp:
        if opcode(e) != 'add' and type(e) != int:
            return simplify_max(('max', )+exp)

    for e in exp:
        if type(e) == int:
            m = min(x if type(x) == int else (x[1] if type(x) == tuple and len(x)>1 and type(x[1]) == int else 0) for x in exp)
                                                # used to be x[1] but 0x0000136DAE58AFCF1EDd2071973d4a7a6fbe98A5 didn't work
            res = ('max', e - m)
            for e2 in exp:
                if e2 != e:
                    res += (sub_op(e2, m), )

            return ('add', m, res)

    m = 10**20
    for e in exp:
        if type(e[1]) != int:
            m = 0
            break
        else:
            m = min(m, e[1])

    common = []
    first = exp[0]
    for f in first:
        if all(f in e[1:] for e in exp[1:]):
            common.append(f)


    if len(common) > 0:
        a = add_op(m, *common)
    else:
        a = m

    res = []
    for e in exp:
        res.append(sub_op(e, a))

    if type(a) == int:
        prefix = (a, )
    else:
        prefix = a[1:]

    return ('add', ) + prefix + (simplify_max(('max', ) + tuple(res)), )




@cached
def add_op(*args):
    if len(args) == 1:
        return args[0]
    elif len(args) == 0:
        return 0

    assert len(args) > 1
    assert 'mul' not in args # some old bug, it's ok for ['mul'..] to be in args, but not 'mul' directly

    # speed optimisation
    real = 0
    for r in args:
        if type(r) in (int, float):
            real += r
        else:
            break
    else:
        return real
    # / speed

    res = flatten_adds(list(args))

    for idx, r in enumerate(res):
        if opcode(r) != 'mul':
            res[idx] = mul_op(1, r)

    real = 0
    symbolic = []

    for r in res:
        assert opcode(r) != 'add'

        if type(r) in [int,float]:
            real += r
            continue

        assert opcode(r) == 'mul'

        # look at all the previously found symbolic expressions
        # perhaps you can add to the previous one - if so, do it
        # else, add this as a new symbolic exp
        for idx, rr in enumerate(symbolic):

            tried = try_add(r, rr) or try_add(rr, r)

            if tried is not None and tried != 0:

                if tried ~ ('mul', ...):
                    symbolic[idx] = tried

                elif tried ~ ('mask_shl', int:size, 0, 256-size, :val):
                    symbolic[idx] = ('mul', 2**(256-size), val)

                else:
                    assert tried ~ ('add', int:num, :term), tried

                    symbolic[idx] = term
                    real += num

                break

        else:
            symbolic.append(r)

    symbolic = tuple(s for s in symbolic if s[1] != 0)

    # rem mul_1
    symbolic = tuple(s[2] if opcode(s)=='mul' and len(s) == 3 and s[1]==1 else s for s in symbolic)

    if real == 0:
        res = symbolic
    else:
        if real > 0:
            real = real % (2**256)
        res = (real, ) + symbolic

    if len(res) == 0:
        return 0

    if len(res) == 1:
        return res[0]


    return ('add', ) + res


def bits(exp):
    return mul_op(exp, 8)

def mul_op(*args):
    # super common
    if len(args) == 1:
        return args[0]

    if args ~ (int:num1, int:num2):
        return args[0] * args[1]

    for a in args:
        assert type(a) != list

        if p := to_exp2(a):

            rest = list(args)
            rest.remove(a)

            exp = mul_op(*rest)

            assert type(exp) != list, exp
            return mask_op(exp, size=256-p, shl=p)

    # flatten muls
    res = tuple()
    for a in args:
        assert type(a) != list
        if a ~ ('mul', *terms):
            res += terms
        else:
            res += (a, )

    # convert (mul (add x y) z) into (add (mul x z) (mul y z))
    # bc we're trying to keep a flat ordered hierarchy

    add_list = tuple(a for a in res if opcode(a) == 'add')
    if len(add_list) > 0:
        el = add_list[0]
        assert opcode(el) == 'add'

        without = list(res)
        without.remove(el)

        ret = tuple(mul_op(x, *without) for x in el[1:])
        return add_op(*ret)

    # multiply real numbers, add symbolic ones to output
    real = 1
    symbolic = tuple()
    for r in res:
        assert opcode(r) != 'add'

        if r == 0:
            return 0
        elif type(r) in (int, float):
            real = int(real * r) # arithmetic, or regular?
        else:
            symbolic += (r, )

    assert len(symbolic) == 0 or symbolic[0] != 'mul' # some old bug

    if len(symbolic) == 0:
        return real
    else:
        return ('mul', real, ) + symbolic

def get_sign(exp):

    if exp == 0:
        return 0

    elif ge_zero(sub_op(exp,1)) == True:
        return 1

    elif ge_zero(exp) == False:
        return -1

    else:
        return None

def safe_gt_zero(exp):
    return safe_ge_zero(sub_op(exp, 1))

def safe_ge_zero(exp):
    try:
        return ge_zero(exp)
    except CannotCompare:
        return None


def to_bytes(exp):
    if type(exp) == int:
        return (exp+7) // 8, exp % 8

    if type(exp) == tuple and exp[:4] == ('mask_shl', 253, 0, 3):
        return exp[4], 0

    if exp ~ ('mask_shl', int:size, int:offset, int:shl, :val) and shl >= 3:
#    if opcode(exp) == 'mask_shl' and type(exp[1]) == int and type(exp[3]) == int and exp[3]>=3:# == ('mask_shl', 253, 0, 3):
        return ('mask_shl', size, offset, shl - 3, val), 0


    if opcode(exp) == 'mul' and len(exp) == 3:
        if exp[1] % 8 == 0:
            return to_bytes(exp[1])

    if opcode(exp) == 'add':
        res = []
        for e in exp[1:]:
            if type(e) == int or opcode(e) == 'mask_shl':
                by, bi = to_bytes(e)
                if bi == 0:
                    res.append(by)
                else:
                    raise

            elif opcode(e) == 'mul' and len(e) == 3:
                if e[1] % 8 == 0:
                    res.append(('mul', e[1] // 8, e[2]))
                elif opcode(e[2]) == 'mask_shl' and e[2][:4] == ('mask_shl', 253, 0, 3):
                    res.append(('mul', e[1], e[2][4]))
                else:
                    raise

            else:
                raise

        return ('add', ) + tuple(res), 0

    return mask_op(exp, shr=3), 0


def divisible_bytes(exp):
    # returns true if an expression can be divided by 8 (into bytes) without exceptions raised etc
    try:
        return True if to_bytes(exp)[1]==0 else False
    except:
        return False

assert to_bytes(('add', ('mask_shl', 253, 0, 3, ('cd', ('add', 4, ('cd', 36)))), ('mul', -1, ('mask_shl', 253, 0, 3, ('add', 36, ('cd', 36)))))) == (('add', ('cd', ('add', 4, ('cd', 36))), ('mul', -1, ('add', 36, ('cd', 36)))), 0)


ge_zero_cache = {}
def ge_zero(exp):
    if type(exp) == int:
        return exp >= 0

    if exp in ge_zero_cache:
        if ge_zero_cache[exp] is None:
            raise CannotCompare
        return ge_zero_cache[exp]

    ge_zero_cache[exp] = _ge_zero(exp)
    if ge_zero_cache[exp] is None:
        raise CannotCompare
    return ge_zero_cache[exp]

def _ge_zero(exp):
    # returns True if exp>=0, False if exp<=0, CannotCompare if it doesn't know

    if type(exp) in (int, float):
        return exp >= 0

    if type(exp) == str:
        return True

    if opcode(exp) == 'mul':
        counter = 1
        for e in exp[1:]:
            c = ge_zero(e)
            if c == True:
                counter *= 1
            elif c == False:
                counter *= -1

        return counter >= 0

    if opcode(exp) == 'bool':
        return True

    if opcode(exp) == 'mask_shl':
        return ge_zero(exp[4])

    if opcode(exp) in ['cd', 'storage','msize']:
        return True

    if opcode(exp) in ['add', 'or']:
        return add_ge_zero(exp)

    if opcode(exp) in ('var', 'ext_call.return_data'):
        return True

    raise CannotCompare

@cached
def lt_op(left, right): # left < right
    if left ~ ('add', int:num, ('max', *terms)):
        left = ('max', ) + tuple(add_op(t, num) for t in terms)

    if right ~ ('add', int:num, ('max', *terms)):
        right = ('max', ) + tuple(add_op(t, num) for t in terms)

    if type(left) == int and type(right) == int:
        return left < right

    if right ~ ('max', ...):
        left, right = right, left

    if left ~ ('max', ...):
        results = [lt_op(l, right) for l in left[1:]]

        if all([r is True for r in results]):
            return True

        if any([r is False for r in results]):
            return False

        return None

    if left ~ ('add', _, ('var', :num)) and \
       right ~ ('add', _, ('var', :num2)) and \
        num != num2:
            raise CannotCompare

    sleft = str(left)
    sright = str(right)

    if left ~ ('var', :num) and str(left) not in sright:
        raise CannotCompare

    if right ~ ('var', :num) and str(right) not in sleft:
        raise CannotCompare

    if type(right) == int and left ~ ('add', int:num, ('var', _)):
        if right >= num:
            return False
        else:
            raise CannotCompare

    if type(left) == int and right ~ ('add', int:num, ('var', _)):
        if left < num:
            return True
        else:
            raise CannotCompare

    return lt2(left, right)

def lt2(left, right):
    subbed = sub_op(right, left)

    sgn = get_sign(subbed)

    if sgn is None:
        raise CannotCompare
    else:
        return sgn > 0

def safe_lt_op(left, right):

    try:
        return lt_op(left, right)
    except CannotCompare:
        return None

def safe_le_op(left, right):
    try:
        return le_op(left, right)
    except CannotCompare:
        return None

def simplify_max(exp):
    if opcode(exp) != 'max':
        return exp

    if opcode(exp) == 'max':
        res = ('max', )
        for e in exp[1:]:
            if opcode(e) == 'max':
                res += e[1:]
            else:
                res += (e, )

        return res

@cached
def le_op(left, right): # left <= right

#    right = add_op(1, right)
#    return lt_op(left, right)
    
    if opcode(left) == 'max':
        left = max_to_add(left)

    if opcode(right) == 'max':
        right = max_to_add(right)

    if type(left) in (int, float) and type(right) in (int, float):
        return left <= right

    subbed = sub_op(right, left)

    return ge_zero(subbed)


def max_op(left, right):
    try:

        if le_op(left, right):
            return right
        else:
            return left

    except CannotCompare:

        if le_op(right, left):
            return left
        else:
            return right

def safe_max_op(left, right):
    try:
        return max_op(left, right)
    except CannotCompare:
        return None


def _max_op(base, what):
    # compares base with what, different from algebra's max because it can return (max, x,y,z)
    if opcode(base) != 'max':

        if safe_lt_op(what, base) is True:
            return base

        if safe_lt_op(what, base) is False:
            return what

        return ('max', base, what)

    else: # opcode(base) == 'max':
        res = []
        for b in base[1:]:
            cmp = safe_lt_op(what, b)

            if cmp is True:
                return base

            if cmp is False:
                res.append(what)

            if cmp is None:
                res.append(b)

        res.append(what)

        res = tuple(set(res))
        if len(res)>1:
            return ('max',)+res
        else:
            return res[0]

assert _max_op(('max', 128, 'unknown'), 200) == ('max', 200, 'unknown')
assert _max_op(('max', 128, 'unknown'), 64) == ('max', 128, 'unknown')


def div_op(a, b):
    assert type(a) != list
    assert type(b) != list
    if b == 1:
        return a

    if type(a) != int and type(b) == int:
        if b < 0:
            a = mul_op(-1, a)
            b = -b

        if to_exp2(b):
            return mask_op(a, size=256-to_exp2(b), shr=to_exp2(b))


    if type(a) != int or type(b) != int:
#        return None
        return ('div', a, b)

    else:
        return a // b


def safe_min_op(left, right):
    try:
        return min_op(left, right)
    except CannotCompare:
        return None

def min_op(left, right):

    try:
        if le_op(left, right):

            return left
        else:
            return right

    except CannotCompare:
        if le_op(right, left):
            return right
        else:
            return left



def or_op(*args):
    if len(args) == 1:
        return args[0]
#    assert len(args) > 1

    res = tuple()

    for r in args:
        if r == 0:
            pass

        elif r ~ ('or', *terms):
            assert len(terms)>1
            res += terms

        elif r not in res:
            res += (r, )

    if len(res) == 0:
        return 0

    if len(res) == 1:
        return res[0]

    assert len(res)>1

    return ('or', ) + res

def neg_mask_op(exp, size, offset):
    exp1 = mask_op(exp, size = sub_op(256, add_op(size, offset)), offset = add_op(offset,size))
    exp2 = mask_op(exp, size = offset, offset = 0)

    return or_op(exp1, exp2)

def strategy_concrete(size, offset, shl, exp_size, exp_offset, exp_shl, exp):
    '''
        This is an optimised version of strategy_1, the program would
        work correctly without it, but much slower, since concrete values
        for masks are very common
    '''

    outer_left = offset + size
    outer_right = offset

    inner_left = exp_offset + exp_size + exp_shl
    inner_right = exp_offset + exp_shl

    left, right = min(outer_left, inner_left), max(outer_right, inner_right)

    if inner_left <= inner_right:
        return 0
    if inner_left <= outer_right:
        return 0

    new_offset = right - exp_shl
    new_size = left - right
    new_shl = shl + exp_shl

    if new_size > 0:
        return mask_op(exp, size=new_size, offset=new_offset, shl=new_shl)
    else:
        return 0

def strategy_0(size, offset, shl, exp_size, exp_offset, exp_shl, exp):
    return 0 if exp == 0 else None

def strategy_1(size, offset, shl, exp_size, exp_offset, exp_shl, exp):
    # default one

    outer_left = add_op(offset, size)
    outer_right = offset

    inner_left = add_op(exp_offset, exp_size, exp_shl)
    inner_right = add_op(exp_offset, exp_shl)

    left, right = safe_min_op(outer_left, inner_left), safe_max_op(outer_right, inner_right)

    if safe_le_op(inner_left, inner_right) is True:
        return 0
    if safe_le_op(inner_left, outer_right) is True:
        return 0

    if None not in (left, right):
        new_offset = sub_op(right, exp_shl)
        new_size = sub_op(left, right)
        new_shl = add_op(shl, exp_shl)

        gezero = safe_ge_zero(new_size)

        if gezero is not False and new_size != 0:
            return mask_op(exp, size=new_size, offset=new_offset, shl=new_shl)

        elif gezero is False or new_size==0:
            return 0

def strategy_2(size, offset, shl, exp_size, exp_offset, exp_shl, exp):
    # move inner left by size, apply mask, and move back

    return strategy_1(size, sub_op(offset, exp_size),
        add_op(shl, exp_size), exp_size, exp_offset,
        sub_op(exp_shl, exp_size), exp)

def strategy_3(size, offset, shl, exp_size, exp_offset, exp_shl, exp):
    # move inner left by it's shl, apply mask, move back

    return strategy_1(size, sub_op(offset, exp_shl), add_op(shl, exp_shl), exp_size, exp_offset, 0, exp)


def strategy_final(size, offset, shl, exp_size, exp_offset, exp_shl, exp):

    return ('mask_shl', size, offset, shl, ('mask_shl', exp_size, exp_offset, exp_shl, exp))


def mask_mask_op(size, offset, shl, exp_size, exp_offset, exp_shl, exp):
    if all_concrete(offset, shl, exp_offset, exp_shl, exp_size, size):
        return strategy_concrete(size, offset, shl, exp_size, exp_offset, exp_shl, exp)

    strategies = (strategy_0, strategy_1, strategy_2, strategy_3, strategy_final)

    for s in strategies:
        res = s(size, offset, shl, exp_size, exp_offset, exp_shl, exp)
        if res is not None:
            return res

    assert False

mask_dict = {}
def mask_op(exp, size = 256, offset = 0, shl = 0, shr = 0):
    if size == 0:
        return 0

    idx = size, offset, shl, shr, exp
    if idx in mask_dict:
        return mask_dict[idx]

    ret = _mask_op(exp, size, offset, shl, shr)
    mask_dict[idx] = ret
    return ret

def _mask_op(exp, size = 256, offset = 0, shl = 0, shr = 0):
    if size == 0:
        return 0
#    if (size, offset, shl, shr) == (256, 0, 0, 0):
#        return exp

    if exp ~ ('div', :num, 1):
        exp = num # should be done somewhere else, but it's 0:37 at night

    shl = sub_op(shl, shr)
    shr = 0


    if exp ~ ('storage', :stor_size, :stor_offset, :stor_idx):
        # trimming the storage inside

        #if safe_le_op(offset, minus_op(shl)):
        #    offset = minus_op(shl)

        # for shl > 0, we are either dealing with multiplication (e.g. store * 32 - happens often)
        # or with trimming the storage and moving around (store << 96)
        # e.g. 0xfF18DBc487b4c2E3222d115952bABfDa8BA52F5F, setupToken
        # below heuristics handle all this, and deliver good results in practice
        # but may be incorrect in some unusual cases

        if type(shl) == int and (shl > 0 and shl < 8):
            pass

        elif type(shl) == int and shl >= 8 and size == 256 \
           and (new_exp := apply_mask_to_storage(exp, size-shl, offset, shl)):
            return new_exp

        elif new_exp := apply_mask_to_storage(exp, size, offset, shl):
            return new_exp

    if exp ~ ('or', *rest):
        return or_op( *[mask_op(e, size, offset, shl, shr) for e in rest])

    if exp ~ ('mask_shl', *params):
        shl = sub_op(shl, shr)
        double_mask = mask_mask_op(size, offset, shl, *params)

        return double_mask

    if type(size) != int or size > 0:
        return ('mask_shl', size, offset, sub_op(shl,shr), exp)
    else:
        return 0

def apply_mask_to_storage(exp, size, offset, shl):
    assert exp ~ ('storage', :stor_size, :stor_offset, :stor_idx)

#    shr = minus_op(shl)

    stor_offset = add_op(stor_offset, offset)
    stor_size = sub_op(stor_size, offset)
    shl = add_op(shl, offset)
    offset = 0

    if safe_lt_op(size, stor_size):
        stor_size = size

    if safe_le_op(stor_size, 0) is True:
        return 0

    res = ('storage', stor_size, stor_offset, stor_idx)

    shr = 0

    if shl == 0:
        return res
    else:
        if res ~ ('storage', size, 0, :stor_idx) and offset == 0:
            shr = minus_op(shl)
            return ('storage', size, shr, stor_idx)

def apply_mask(val, size, offset=0, shl=0):
    assert all_concrete(val, size, offset, shl)

    mask = mask_to_int(size, offset)
    val = val & mask

    if shl > 0:
        val = val << shl

    if shl < 0:
        val = val >> -shl

    return val


def try_add(self, other):
    if (res := _try_add(self, other)) is not None:
        return res

    return __try_add(self, other)


def __try_add(self, other):
    if self ~ ('mul', :num, ('mask_shl', int:size, int:off, int:shl, :val)) and shl > 0:
        self = ('mul', num + 2**shl, ('mask_shl', size+shl, off, 0, val))

    if other ~ ('mul', :num, ('mask_shl', int:size, int:off, int:shl, :val)) and shl > 0:
        other = ('mul', num + 2**shl, ('mask_shl', size+shl, off, 0, val))

    return _try_add(self, other)

def _try_add(self, other):
    # tries to add (mul a x) (mul b y)
    # 'self' name to be refactored

#   so proud of this /s

    assert self ~ ('mul', int, *terms)
    if len(terms) > 1:
        return None

    assert other ~ ('mul', int, *terms)
    if len(terms) > 1:
        return None


    if self ~ ('mul', -1, :val) and \
       other ~ ('mul', :mul, ('mask_shl', int:other_size, 0, int:shl, val)) and other_size == 256 - shl:
            mul *= 2**shl - 1
            return mul_op(mul, val)

#    if self, other == mul(x, exp), mul(y, exp)
#                   => mul(x+y, exp)

    if self ~ ('mul', int:x, :exp) and \
       other ~ ('mul', int:y, exp):
         return ('mul', x + y, exp)


#    if self, other == mul(x, mask_shl(256-y, y, 0, exp)),
#                      mul(x, mask_shl(y, 0, 0, exp))
#                   => mul(x, (mask_shl, 256, 0, 0, exp))

    if self ~ ('mul', :x, :self_mask) and \
       other ~ ('mul', x, :other_mask):

        if opcode(self_mask) == 'mask_shl' and opcode(other_mask) == 'mask_shl' and\
            self_mask[1]+self_mask[2]==256 and self_mask[2] == other_mask[1] and other_mask[2] == 0 and\
            self_mask[3] == other_mask[3] and self_mask[4] == other_mask[4]:
                return mul_op(self[1], mask_op(self_mask[4], size=256, offset=0, shl=self_mask[3]))


#   if self, other == mul(x, mask_shl(256-y, y, 0, ADD(2**y - 1, mul(1, exp)))),
#                     mul(-x, exp)
#                  => mul(x, 2**y - mask_op(exp, size=y))

    '''
    to be tested:

    if other ~ ('mul', :x, :exp) and \
       self ~ ('mul', -x, ('mask_shl', 256-y, int:y, 0, ('add', 2**y-1, ('mul', 1, exp)))):
           return mul_op(-x, sub_op(2**y, mask_op(x, size=y)))
    '''

    if opcode(self[2]) == 'mask_shl' and opcode(other[2]) != 'mask_shl' and self[1] == minus_op(other[1]):
        x = other[2]
        for y in [3,4,5,6,7,8,16,32,64,128]:
            m = ('mask_shl', 256-y, y, 0, ('add', 2**y-1, ('mul', 1, x) ) )# - x #== 2**y-1 - Mask(y,0,0, x)
            if self[2] == m:
                return mul_op(self[1], sub_op(2**y, mask_op(x, size=y)))



#   if self, other == mul(-x, mask_shl(256-y, y, 0, exp),
#                     mul(x, exp)
#                  => mul(x, mask_op(exp, size=y))

    if opcode(self[2]) == 'mask_shl' and opcode(other[2]) != 'mask_shl' and self[1] == minus_op(other[1]):
        x = other[2]
        for y in [3,4,5,6,7,8,16,32,64,128]:
            m = ('mask_shl', 256-y, y, 0, x)# - x #== 2**y-1 - Mask(y,0,0, x)
            if self[2] == m:
                return mul_op(other[1], mask_op(x, size=y))
            m = ('mask_shl', 251-y, y, 0, x)  # close enough ;)
                                              # happens in memcopy loops, shouldn't cause significant bugs
                                              # and helps clean up the code a lot

            if self[2] == m:
                return mul_op(other[1], mask_op(x, size=y))

    # other

    if self ~ ('mul', :num, ('mask_shl', 256, 0, 0, :exp)):
        self = ('mul', num, exp)

    if other ~ ('mul', :num, ('mask_shl', 256, 0, 0, :exp)):
        other = ('mul', num, exp)

    assert self ~ ('mul', int:num1, :exp1)
    assert other ~ ('mul', int:num2, :exp2)

    if exp1 == exp2:
        return mul_op(num1 + num2, exp1)

    # mask 256,0,0,x - 6,0,0,x == 250,6,0,x

    if num1 == -num2 and exp2 ~ ('mask_shl', int:size, 0, 0, exp1):
        return ('mul', num1, ('mask_shl', 256-size, size, 0, exp1))

    if num1 == -num2 and \
       exp1 ~ ('mask_shl', int:size1, 0, 0, :x) and \
       exp2 ~ ('mask_shl', int:size2, 0, 0, x) and \
       size2 < size1:
            return ('mul', num1, ('mask_shl', size1-size2, 0, 0, x))

    return None

def erase_op(exp, size, shl):
    assert False

assert max_to_add(('max', 480, ('add', 356, ('cd', ('add', 4, ('cd', 36)))))) == ('add', 356, ('max', 124, ('cd', ('add', 4, ('cd', 36)))))
assert add_op(64, ('var', 4)) == ('add', 64, ('var', 4))

l = ('add', 128, ('cd', ('add', 4, ('cd', 36))))
r = ('add', 128, ('mask_shl', 251, 5, 0, ('add', 31, ('cd', ('add', 4, ('cd', 36))))))
assert le_op(l, r) == True, le_op(r, l)

#exit()
Copywriter by some ✈️ 

  
}
    "browser-test": "start-server-and-test browser-test-server 4001 browser-test-tests",
    "browser-test-server": "cross-env NODE_ENV=production PORT=4001 node server.js",
    "browser-test-tests": "cross-env BROWSER=1 jest tests/browser/browser.js",
    "sync-search": "start-server-and-test sync-search-server 4002 sync-search-indices",
    "sync-search-dry-run": "DRY_RUN=1 npm run sync-search",
    "sync-search-server": "cross-env NODE_ENV=production PORT=4002 node server.js",
    "sync-search-indices": "script/sync-search-indices.js",
    "test-watch": "jest --watch --notify --notifyMode=change --coverage",
    "check-deps": "node script/check-deps.js",
    "prevent-pushes-to-main": "node script/prevent-pushes-to-main.js",
    "pa11y-ci": "pa11y-ci",
    "pa11y-test": "start-server-and-test browser-test-server 4001 pa11y-ci",
    "link-check": "start-server-and-test link-check-server 4002 link-check-test",
    "link-check-server": "cross-env NODE_ENV=development ENABLED_LANGUAGES='en' PORT=4002 node server.js",
    "link-check-test": "cross-env node script/check-internal-links.js",
    "heroku-postbuild": "node script/early-access/clone-for-build.js && npm run build"
  },
  "engines": {
    "node": ">= 14.0.0"
  },
  "repository": "https://github.com/github/docs",
  "husky": {
    "hooks": {
      "pre-commit": "node script/prevent-translation-commits.js",
      "pre-push": "npm run prevent-pushes-to-main"
    }
  }
}
